{
    "openapi": "3.0.3",
    "info": {
        "title": "Komis.js API",
        "description": "Simple API for car offer site backend.",
        "license": {
            "name": "MIT"
        }
    },
    "paths": {
        "/users/register": {
            "post": {
                "description": "Used to register new users into the system.",
                "requestBody": {
                    "description": "User to add to the system.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            },
                            "example": {
                                "email": "rafał@brzozowski.net",
                                "password": "takblisko123",
                                "firstName": "Rafał",
                                "lastName": "Brzozowski",
                                "dateOfBirth": "1989-01-01",
                                "adressString": "Woronicza 17",
                                "phoneNumber": "123123121",
                                "zipCode": "00-000",
                                "location": "Warszawa",
                                "description": "Prawie wygrałem Eurowizję"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A notion of a success",
                        "content": {
                            "application/json": {
                                "example": {
                                    "success": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure occured.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "success": false,
                                    "errorType": "SequelizeValidationError",
                                    "errorDescription": "notNull Violation: User.lastName cannot be null,\nnotNull Violation: User.phoneNumber cannot be null"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Used to login, in other words, to get JWT token that allows to communicate with user-specific endpoints.",
                "requestBody": {
                    "description": "Login and password of user that wants to log in",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type":"object"
                            },
                            "example": {
                                "email": "guy@company.com",
                                "password": "verysecretpassword1$"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "JSON containing JWT token to use later.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "success": true,
                                    "jwtToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJhZmHFgkBicnpvem93c2tpLm5ldCIsImlhdCI6MTY1MDg4NTgzOCwiZXhwIjoxNjUwOTcyMjM4LCJhdrb21pc2pzLXVzZXJzIiwiaXNzIjoia29taXNqcyJ9.nGgurhH2Q-xgQSCxInFccQW-tkh8Ku6uBqc"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Failure occured. Bad login or password. User unauthorized."
                    }
                }
            }
        },
        "/users/info/{email}": {
            "get": {
                "description": "Used to get information about particular user, based on his email.",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "Email of user we want to fetch",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched information about an user.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "success": true,
                                    "email": "rafał@brzozowski.net",
                                    "firstName": "Rafał",
                                    "lastName": "Brzozowski",
                                    "dateOfBirth": "1989-01-01",
                                    "adressString": "Woronicza 17",
                                    "zipCode": "00-000",
                                    "location": "Warszawa",
                                    "phoneNumber": "123123121"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "User with given email doesn't exist.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "success": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/edit/{uemail}": {
            "patch": {
                "description": "Endpoint used to edit user's data.",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "Email of user we want to fetch",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Fields to edit data. Same as in registration. Can't contain password or salt.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type":"object"
                            },
                            "example": {
                                "firstName": "George",
                                "lastName": "Smith"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Data successfully edited.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "success": true
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Tried to change password or salt, which is forbidden here.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "success": false,
                                    "message": "Illegal properties"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User tried to change data of another user, not his data.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "success": false,
                                    "message": "Unauthorized"
                                  }
                            }
                        }
                    }
                }
            }
        },
        "/users/validate": {
            "get": {
                "description": "Verify a site token. Use as any other endpoint including token in headers.",
                "responses": {
                    "200": {
                        "description": "Token is valid.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "success":true
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token invalid."
                    }
                }
            }
        },
        "/offer/{offerid}": {
            "get": {
                "description": "Get data of an offer with given id.",
                "parameters": [
                    {
                        "name": "offerid",
                        "in": "path",
                        "description": "Offer's id.",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched offer data.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "success": true,
                                    "id": 6,
                                    "userEmail": "rafał@brzozowski.net",
                                    "title": "HIT BMW M3 E46",
                                    "image": null,
                                    "manufactuer": "BMW",
                                    "carModel": "Seria 3 (E46)",
                                    "year": 1999,
                                    "engineType": "Spalinowy",
                                    "engineCapacity": 2000,
                                    "mileage": 100000,
                                    "price": 25000,
                                    "description": "Ładniejszy niż poprzednio",
                                    "lat": "52.530700",
                                    "lng": "21.681820"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Offer with said id doesn't exist.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "success": false,
                                    "message": "No offer with that id exists"
                                  }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request."
                    }
                }
            },
            "delete": {
                "description": "Delete an existing offer.",
                "parameters": [
                    {
                        "name": "offerid",
                        "in": "path",
                        "description": "Offer's id.",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description":"A notion of a success.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "success": true
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Offer with said id doesn't exist or offer with said id isn't that user's",
                        "content": {
                            "application/json": {
                                "example": {
                                    "success": false
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure occured."
                    }
                }
            }
        },
        "/offer": {
            "post": {
                "description": "Create a new car offer.",
                "requestBody": {
                    "description": "Parameters of said car offer.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            },
                            "example": {
                                "success": true,
                                "id": 6,
                                "userEmail": "rafał@brzozowski.net",
                                "title": "HIT BMW M3 E46",
                                "image": null,
                                "manufactuer": "BMW",
                                "carModel": "Seria 3 (E46)",
                                "year": 1999,
                                "EngineTypeName": "Spalinowy",
                                "engineCapacity": 2000,
                                "mileage": 100000,
                                "price": 25000,
                                "description": "Ładniejszy niż poprzednio",
                                "lat": "52.530700",
                                "lng": "21.681820"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A notion of a success.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "success": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error in request's body.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "success": false,
                                    "errorType": "SequelizeValidationError",
                                    "errorDescription": "notNull Violation: CarOffer.mileage cannot be null"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Bad token. Request unauthorized."
                    }
                }
            }
        },
        "/offer/list": {
            "get": {
                "description": "Get general list of offers with optional filtering.",
                "parameters": [
                    {
                        "name": "user",
                        "in": "query",
                        "description": "User's email adress."
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "City from where user wants to find offers."
                    },
                    {
                        "name": "adress",
                        "in": "query",
                        "description": "Adress in city where user wants to find offers."
                    },
                    {
                        "name": "kilometers",
                        "in": "query",
                        "description": "Maximal distance from given location, in kilometers."
                    },
                    {
                        "name": "priceMin",
                        "in": "query",
                        "description": "Minimal price user wants from an offer."
                    },
                    {
                        "name": "priceMax",
                        "in": "query",
                        "description": "Maximal price user wants from an offer."
                    },
                    {
                        "name": "mileageMin",
                        "in": "query",
                        "description": "Minimal mileage user wants from an offer."
                    },
                    {
                        "name": "mileageMax",
                        "in": "query",
                        "description": "Maximal mileage user wants from an offer."
                    },
                    {
                        "name": "yearMin",
                        "in": "query",
                        "description": "Minimal year user wants from an offer."
                    },
                    {
                        "name": "yearMax",
                        "in": "query",
                        "description": "Maximal year user wants from an offer."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of matching offers.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "success": true,
                                    "list": [
                                        {
                                            "offerId": 6,
                                            "title": "HIT BMW M3 E46",
                                            "image": null,
                                            "price": 25000,
                                            "modelYear": 1999,
                                            "mileage": 100000,
                                            "engineCapacity": 2000,
                                            "description": "Ładniejszy niż poprzednio",
                                            "latitude": "52.530700",
                                            "longitude": "21.681820",
                                            "createdAt": "2022-05-04T12:45:32.000Z",
                                            "updatedAt": "2022-05-04T12:45:32.000Z",
                                            "ManufactuerName": "BMW",
                                            "CarModelName": "Seria 3 (E46)",
                                            "EngineTypeName": "Spalinowy",
                                            "UserEmail": "rafał@brzozowski.net"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Bad token. Authentication failed."
                    },
                    "400": {
                        "description": "Failure occured.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "success": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/offer/fav": {
            "get": {
                "description": "Getting list of fauvorite offers for currently logged user.",
                "responses": {
                    "200": {
                        "description": "Fetched list.",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "offerId": 5,
                                        "title": "Testuję jeszcze raz",
                                        "image": null,
                                        "price": 20000,
                                        "modelYear": 1999,
                                        "mileage": 129900,
                                        "engineCapacity": 2000,
                                        "description": "Piękne BMW M3 E46 pryma sort",
                                        "latitude": "52.532951",
                                        "longitude": "21.686139",
                                        "createdAt": "2022-04-22T12:36:39.000Z",
                                        "updatedAt": "2022-04-22T12:36:39.000Z",
                                        "ManufactuerName": "BMW",
                                        "CarModelName": "Seria 3 (E46)",
                                        "EngineTypeName": "Spalinowy",
                                        "UserEmail": "rafał@brzozowski.net"
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "Bad token. Request unauthorized."
                    },
                    "400": {
                        "description": "Other kind of failure occured.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "success": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/offer/fav/{offerid}": {
            "post": {
                "description": "Making offer favourite.",
                "parameters": [
                    {
                        "name": "offerid",
                        "in": "path",
                        "description": "Offer's id.",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A notion of a success.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "success": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure occured. Probably bad offerId was given.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "success": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Bad token. Request unauthorized."
                    }
                }
            },
            "delete": {
                "description": "Making offer not fauvorite, where it already is of course.",
                "parameters": [
                    {
                        "name": "offerid",
                        "in": "path",
                        "description": "Offer's id.",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A notion of a success.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "success": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failure occured. Probably bad offerId was given.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "success": false
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Bad token. Request unauthorized."
                    }
                }
            }
        },
        "/meta/countries": {
            "get": {
                "description": "Get a list of all countries that are in the database.",
                "responses": {
                    "200": {
                        "description": "A list of possible countries.",
                        "content": {
                            "application/json": {
                                "example": [
                                    "Czechy",
                                    "Francja",
                                    "Hiszpania",
                                    "Niemcy",
                                    "Stany Zjednoczone",
                                    "Wielka Brytania",
                                    "Włochy"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/meta/engines": {
            "get": {
                "description": "Get a list of all engine types that are in the database.",
                "responses": {
                    "200": {
                        "description": "A list of possible engine types.",
                        "content": {
                            "application/json": {
                                "example": [
                                    "Diesel",
                                    "Elektryczny",
                                    "Spalinowy"
                                ]
                            }
                        }
                    }
                }
            }
        }
        
    }
}